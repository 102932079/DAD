/*
Deployment script for DAD_VS_Demo

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DeployTestData "true"
:setvar DatabaseName "DAD_VS_Demo"
:setvar DefaultFilePrefix "DAD_VS_Demo"
:setvar DefaultDataPath "C:\Users\tengw\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\tengw\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 854ebe7e-2062-4d17-a642-84c18502141e, ded85359-a569-4660-8c8d-c71bc0fea9cf is skipped, element [dbo].[Student].[Id] (SqlSimpleColumn) will not be renamed to StudentID';


GO
PRINT N'Rename refactoring operation with key b4f125c0-4847-4f6d-877b-9db5004a0fa2 is skipped, element [dbo].[Enrollment].[Id] (SqlSimpleColumn) will not be renamed to StudentID';


GO
PRINT N'Creating [dbo].[Enrollment]...';


GO
CREATE TABLE [dbo].[Enrollment] (
    [StudentID]   INT            NOT NULL,
    [SubjectCode] NVARCHAR (100) NOT NULL,
    [Grade]       NVARCHAR (2)   NULL,
    PRIMARY KEY CLUSTERED ([StudentID] ASC, [SubjectCode] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [StudentID] INT           NOT NULL,
    [FName]     NVARCHAR (50) NULL,
    [Surname]   NVARCHAR (50) NULL,
    [NewColumn] NCHAR (10)    NULL,
    PRIMARY KEY CLUSTERED ([StudentID] ASC)
);


GO
PRINT N'Creating [dbo].[MAT_ASKED_FOR_THIS]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [MAT_ASKED_FOR_THIS] FOREIGN KEY ([StudentID]) REFERENCES [dbo].[Student] ([StudentID]);


GO
PRINT N'Creating [dbo].[CK_Grade]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [CK_Grade] CHECK (Grade in ('N', 'P', 'C'));


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '854ebe7e-2062-4d17-a642-84c18502141e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('854ebe7e-2062-4d17-a642-84c18502141e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b4f125c0-4847-4f6d-877b-9db5004a0fa2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b4f125c0-4847-4f6d-877b-9db5004a0fa2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ded85359-a569-4660-8c8d-c71bc0fea9cf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ded85359-a569-4660-8c8d-c71bc0fea9cf')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF ('$(DeployTestData)' = 'true' )
BEGIN
    DELETE FROM STUDENT;

    INSERT INTO STUDENT (StudentID, Fname, Surname, NewColumn ) VALUES
    (1, 'Onezz', 'dsfsdf, null'),
    (2, 'Twozz', 'dsfsdf, null'),
    (3, 'Threezz', 'dsfsdf, null');

END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [MAT_ASKED_FOR_THIS];

ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [CK_Grade];


GO
PRINT N'Update complete.';


GO
